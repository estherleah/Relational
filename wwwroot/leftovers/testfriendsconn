<h3>TESTING CONNECTION HERE</h3>
<?php echo "CURRENT USER ID" . " " . $user ?>
<?php
while ($row = mysqli_fetch_array($testConnResult)) {
  $userID1 = $row['userID1'];
  $userID2 = $row['userID2'];
  $status = $row['status'];
  $firstName = $row['firstName'];
  $lastName = $row['lastName'];
  $profilePhotoURL = $row['profilephotoURL'];
    ?>

    <div class="testconn row">
        <img class="friendPhoto" src="<?php echo $profilePhotoURL ?>" />

           <?php echo "Test row" . " " . $status; ?> <?php echo $firstName; ?>
            <?php echo $userID1;?> <?php echo $userID2; ?>
            <button type="button"
               class="btn btn-danger btnChangeCircleMemberStatus btnDelete"
               role="button"
               data-id="<?php echo $thisUserID ?>"
               >
               Delete
            </button>

        <p>
          <br>
    </div>
    <?php
}
?>

------------------------- find and display mutual friends -----------------------------------
//this query current works for finding friends of friends
ie if 2 is friends with 3 and 3 is friends with 4 (but not 2) then 4 will be returned as a result
still having issues with this

SELECT firstName, lastName, profilephotoURL, gender,
                            location, userID
                            FROM user
                            WHERE userID IN
                              (SELECT DISTINCT userID2
                              FROM friendship AS fo
                              WHERE userID1 IN
                                (SELECT userID2
                                  FROM friendship
                                  WHERE userID1 = 1

                                )

                                AND status = 1

                                AND NOT EXISTS (
                                  SELECT *
                                  FROM friendship AS fi
                                  WHERE fi.userID2 = fo.userID2
                                  AND fi.userID2 = 1
                                )

                                AND NOT EXISTS (
                                  SELECT *
                                  FROM friendship AS fi
                                  WHERE fi.userID1 = fo.userID1
                                  AND fi.userID1 = 1

                                )

                              )

                              SELECT firstName, lastName, profilephotoURL, gender,
                                                          location, userID
                                                          FROM user
                                                          WHERE userID IN
                                                            (SELECT DISTINCT userID2
                                                            FROM friendship AS fo
                                                            WHERE userID1 IN
                                                              (SELECT userID2
                                                                FROM friendship
                                                                WHERE userID1 = 3
                                                              )

                                                              AND status = 1
                                                              AND NOT EXISTS (
                                                                SELECT *
                                                                FROM friendship AS fi
                                                                WHERE fi.userID2 = fo.userID2
                                                                AND fi.userID2 = 3

                                                             		AND NOT EXISTS (
                                                                  	SELECT *
                                                                 	 	FROM friendship AS fi2
                                                                  	WHERE fi2.userID1 = fo.userID1
                                                                		AND fi2.userID1 = 3


                                                            			)


                                                          	)
                                                            )
--- not entirely sure if this works
---- this excludes your pending friends but it recommends friends of pending friends
SELECT firstName, lastName, profilephotoURL, gender,
                            location, userID
                            FROM user
                            WHERE userID IN
                              (SELECT DISTINCT userID2
                              FROM friendship AS fo
                              WHERE userID1 IN
                                (SELECT userID2
                                  FROM friendship
                                  WHERE userID1 = 3
                                )

                                AND status = 1
                                AND fo.userID2 NOT IN
                             	(SELECT userID2
                                 FROM friendship
                                 WHERE userID1 = 3)
                               	AND userID != 3

                            )
-----------------------------------------------------------------------------
  ORDER BY RAND() LIMIT $circleFriendsLimit
more troubleshooting
FOR CIRCLE RECOMMENDATIONS
-----------------------------------------------------------------------------
ORIGINAL (from a long time ago)
$recommendQuery = " SELECT firstName, lastName, profilephotoURL, gender, location
                            FROM user
                            WHERE userID IN
                              (SELECT DISTINCT userID
                              FROM circle_participants AS c
                              WHERE c.circleID IN
                                (SELECT circleID
                                  FROM circle_participants
                                  WHERE userID = '$userIDEscaped'
                                )
                                AND userID != '$userIDEscaped'
                                AND NOT EXISTS (
                                  SELECT *
                                  FROM friendship AS f
                                  WHERE f.userID1 = '$userIDEscaped'
                                  AND f.userID2 = c.userID
                                )

                              )
                              ORDER BY RAND() LIMIT $circleFriendsLimit
                            ;
                  ";
-----
trying another approach - this seems to work
(return members in a circle the user is in, excluding anyone they are already friends with)

SELECT firstName, lastName, profilephotoURL, gender, location
                            FROM user
                            WHERE userID IN
                              (SELECT DISTINCT userID
                              FROM circle_participants AS c
                              WHERE c.circleID IN
                                (SELECT circleID
                                  FROM circle_participants
                                  WHERE userID = 7
                                 )

                               AND userID != 7

                               AND NOT EXISTS (
                                  SELECT *
                                  FROM friendship AS f
                                  WHERE f.userID1 = 7
                                  AND f.userID2 = c.userID
                                )
                               )

----------
this query returns all the people in the same location as the selected user (not already friends)
----------
SELECT * FROM `user` as u WHERE u.userID IN
				(SELECT DISTINCT userID
                 FROM user AS u2
                 WHERE u2.location IN
                     (SELECT location
                      FROM user
                      WHERE userID = 7
                                 )


                 AND u.userID != 7

                  AND NOT EXISTS (
                                  SELECT *
                                  FROM friendship AS f
                                  WHERE f.userID1 = 7
                                  AND f.userID2 = u2.userID
                                )
                              )
--------------------------------------------------------------------------------
this should definitely work for adding friends (so it's a js/php problem)
------------------
//this will work i don't know if you need escapestring
$addFriend = "INSERT INTO friendship (userID1, userID2, status)
              VALUES (4, 4, 0),
                      (1, 1, 0);
              ";
//this works too

              $deleteFriend = "  DELETE FROM friendship
                                  WHERE      (userID1 = '4' AND userID2 = '4'
                                              OR userID1 = '$userID2' AND userID2 = '$userID1')";

                                                  $addFriend = "INSERT INTO friendship (userID1, userID2, status)
                                                                VALUES ('$userID1', '7', '0');
                                                                  ";

                                                                  ugh
--------------------------------------

INSERT INTO friendship (userID1, userID2, status, origin)
                  VALUES ('7', '7', '0', 7),
                        ('6', '6', '0', 7);

this works - trying an 'origin' flag to see who sent the request

------------------------------------

need to fix asymmetry of request being accepted

INSERT INTO friendship (userID1, userID2, status, origin)
	                 VALUES ('1','5','1','1')
                   ON DUPLICATE KEY UPDATE status = 1
-------------------------------------

if $profileID != $user AND

-------------------------------------
modify the friend query

SELECT firstName, lastName, profilephotoURL, gender,
                            location, userID
                            FROM user
                            WHERE userID IN
                              (SELECT DISTINCT userID2
                              FROM friendship AS fo
                              WHERE userID1 IN
                                (SELECT userID2
                                  FROM friendship
                                  WHERE userID1 = '3'
                                )
                                AND status = 1
                                AND fo.userID2 NOT IN
                             	(SELECT userID2
                                 FROM friendship
                                 WHERE userID1 = '3')
                               	AND userID2 = '3'

                            )
